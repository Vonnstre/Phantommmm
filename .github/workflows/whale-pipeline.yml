name: Whales Pipeline

on:
  workflow_dispatch:
    inputs:
      per_token:
        description: 'Holders per token for candidate builder'
        required: true
        default: '500'
      limit:
        description: 'Number of addresses to consider (fetch limit)'
        required: true
        default: '10000'
      usd_threshold:
        description: 'Filter wallets by min USD value'
        required: true
        default: '5000'
      eth_usd:
        description: 'Override ETH/USD price (leave blank to fetch)'
        required: false
        default: ''
      concurrency_fast:
        description: 'Concurrency for fast pass'
        required: true
        default: '12'
      run_deep:
        description: 'Run deep-enrichment on top 500? (true/false)'
        required: true
        default: 'true'
      concurrency_deep:
        description: 'Concurrency for deep pass'
        required: true
        default: '4'

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build candidates from holders
        run: |
          mkdir -p outputs
          python scripts/build_candidates_from_holders.py \
            --per_token ${{ inputs.per_token }} \
            --concurrency 4 \
            --out outputs/candidates_from_holders.txt

      - name: Fast pass - fetch candidates
        env:
          ETH_USD: ${{ inputs.eth_usd }}
        run: |
          mkdir -p outputs
          if [ -z "$ETH_USD" ]; then
            python scripts/fetch_candidates.py \
              --addresses_file outputs/candidates_from_holders.txt \
              --limit ${{ inputs.limit }} \
              --usd_threshold ${{ inputs.usd_threshold }} \
              --concurrency ${{ inputs.concurrency_fast }} \
              --out outputs/whale_candidates_raw.csv \
              --fast
          else
            python scripts/fetch_candidates.py \
              --addresses_file outputs/candidates_from_holders.txt \
              --limit ${{ inputs.limit }} \
              --usd_threshold ${{ inputs.usd_threshold }} \
              --concurrency ${{ inputs.concurrency_fast }} \
              --out outputs/whale_candidates_raw.csv \
              --eth_usd "$ETH_USD" \
              --fast
          fi

      - name: Finalize (first pass)
        run: |
          python scripts/finalize_sqlite.py --raw outputs/whale_candidates_raw.csv --base outputs

      - name: Deep enrich top 500
        if: ${{ inputs.run_deep == 'true' }}
        env:
          ETH_USD: ${{ inputs.eth_usd }}
        run: |
          if [ -z "$ETH_USD" ]; then
            python scripts/deep_enrich_top.py \
              --top_file outputs/top500_for_deep.txt \
              --out outputs/whale_candidates_deep.csv \
              --concurrency ${{ inputs.concurrency_deep }}
          else
            python scripts/deep_enrich_top.py \
              --top_file outputs/top500_for_deep.txt \
              --out outputs/whale_candidates_deep.csv \
              --concurrency ${{ inputs.concurrency_deep }} \
              --eth_usd "$ETH_USD"
          fi

      - name: Merge deep + finalize again
        if: ${{ inputs.run_deep == 'true' }}
        run: |
          python scripts/merge_deep_with_raw.py \
            --raw outputs/whale_candidates_raw.csv \
            --deep outputs/whale_candidates_deep.csv \
            --out outputs/whale_candidates_merged.csv
          python scripts/finalize_sqlite.py --raw outputs/whale_candidates_merged.csv --base outputs

      - name: Upload outputs
        uses: actions/upload-artifact@v4
        with:
          name: whale-candidates-${{ github.run_number }}
          path: outputs/**
